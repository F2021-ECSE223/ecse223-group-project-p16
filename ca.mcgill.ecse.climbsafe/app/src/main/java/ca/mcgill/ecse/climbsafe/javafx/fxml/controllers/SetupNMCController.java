package ca.mcgill.ecse.climbsafe.javafx.fxml.controllers;

import static ca.mcgill.ecse.climbsafe.javafx.fxml.controllers.ViewUtils.callController;

import java.sql.Date;
import java.time.LocalDate;


import ca.mcgill.ecse.climbsafe.controller.ClimbSafeFeatureSet1Controller;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.DatePicker;
import javafx.scene.control.TextField;

public class SetupNMCController {
	@FXML
	private TextField NumberOfWeeksTextField;
	@FXML
	private TextField PriceOfGuidePerWeekTextField;
	@FXML
	private Button Setup;
	@FXML
	private DatePicker datePicker;
	
	/**
	 * initialize() - ensures that the dates on the datePicker can not be edited
	 */
	@FXML
	  public void initialize() {
	    // set datePicker to be not editable so that the user must choose from the calendar
	    datePicker.setEditable(false);

	    }
	
	// Event Listener on TextField[#NumberOfWeeksTextField].onAction
	@FXML
	public void enterNumberOfWeeks(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on TextField[#PriceOfGuidePerWeekTextField].onAction
	@FXML
	public void enterPriceOfGuide(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#Setup].onAction
	/**
	 * setup - Sets up the NMC upon clicking on the button
	 * @param event
	 */
	@FXML
	public void setup(ActionEvent event) {
		// TODO Autogenerated
		LocalDate selectedDate = datePicker.getValue();
		
	    try {
	    	int nrWeeks = Integer.parseInt(NumberOfWeeksTextField.getText());
		    int pricePerWeek = Integer.parseInt(PriceOfGuidePerWeekTextField.getText());
		    
		    var error = "";
		    
		    if (selectedDate == null) {
		      error += "Invalid date! ";
		    }
		    
		    if (!error.isEmpty()) {
		        ViewUtils.showError(error);
		      } else {
		        var date = Date.valueOf(selectedDate);
		        if(callController(() -> ClimbSafeFeatureSet1Controller.setup(date, nrWeeks, pricePerWeek))) {

		        	ViewUtils.makePopupWindow("Setup Successful","Season begins on " + date.toString() + " for " + String.valueOf(nrWeeks) + " week(s), with guide prices at " + String.valueOf(pricePerWeek) + " shillings per week.");
		        	NumberOfWeeksTextField.setText("");
		        	PriceOfGuidePerWeekTextField.setText("");
		        	datePicker.setValue(null);
		        };
		      }
	    }
	    catch(NumberFormatException e) {
	    	ViewUtils.showError("Please input a valid number of weeks and price");
	    }
	    
	}
}
